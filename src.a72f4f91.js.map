{"version":3,"sources":["picture.js","utils.js","components/picture-canvas.js","app.js","tools.js","components/load-button.js","components/save-button.js","components/undo-button.js","components/redo-button.js","components/reset-button.js","components/tool-select.js","components/color-select.js","components/set-scale.js","components/index.js","index.js"],"names":["Picture","exports","width","height","pixels","_classCallCheck","_createClass","key","value","x","y","_step","copy","slice","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","color","err","e","f","Array","fill","_picture","require","elt","type","props","dom","document","createElement","Object","assign","_len","arguments","length","children","_key","_i","_children","child","appendChild","createTextNode","drawPicture","picture","canvas","scale","ctx","getContext","fillStyle","pixel","fillRect","hex","toString","padStart","cached","data","localStorage","setItem","JSON","stringify","getCachedState","state","parse","getItem","map","_ref","redone","_ref2","_utils","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","i","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","PictureCanvas","onPointerDown","_this","onmousedown","event","_mouse","ontouchstart","_touch","syncState","mouseDownEvent","onDown","_this2","button","pos","_pointerPosition","onMove","addEventListener","move","moveEvent","buttons","removeEventListener","newPos","touchStartEvent","_this3","touches","preventDefault","rect","getBoundingClientRect","Math","floor","clientX","left","clientY","top","_pictureCanvas","allowArrayLike","it","isArray","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","name","from","test","iter","len","arr2","PixelEditor","config","tools","controls","dispatch","drawFunction","selectedTool","tool","Control","style","apply","concat","reduce","a","c","onKeyDown","undo","metaKey","ctrlKey","code","redo","save","window","draw","drawPixel","drawn","rectangle","start","drawRectangle","xStart","min","yStart","xEnd","max","yEnd","push","circle","drawCircle","radius","sqrt","pow","centerX","centerY","triangle","drawTriangle","x1","y1","x2","y2","deltaX","abs","deltaY","signX","signY","error","error2","around","dx","dy","targetColor","_loop","some","p","pick","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","r","l","t","u","LoadButton","_","onclick","startLoad","onchange","finishLoad","files","body","click","remove","file","reader","FileReader","image","onload","pictureFromImage","src","result","readAsDataURL","drawImage","getImageData","_data$slice2","g","b","SaveButton","_prompt","link","href","toDataURL","download","prompt","UndoButton","disabled","RedoButton","ResetButton","confirm","reset","ToolSelect","select","keys","selected","ColorSelect","SetScale","scaleOptions","location","reload","_loadButton","_saveButton","_undoButton","_redoButton","_resetButton","_toolSelect","_colorSelect","_setScale","_app","_tools","_components","_picture2","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","startPixelEditor","_getCachedState","_ref$state","DEFAULT_STATE","_ref$tools","baseTools","_ref$controls","baseControls","_ref$scaleOptions","app","action","historyUpdateState","empty","doneAt","pop","Date","now","console","info","getElementById"],"mappings":"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","file":"src.a72f4f91.js","sourceRoot":"../src","sourcesContent":["/**\n * This class represents the picture in the canvas\n */\nexport class Picture {\n  constructor(width, height, pixels) {\n    this.width = width\n    this.height = height\n    this.pixels = pixels\n  }\n\n  static empty(width, height, color) {\n    let pixels = new Array(width * height).fill(color)\n    return new Picture(width, height, pixels)\n  }\n\n  pixel(x, y) {\n    return this.pixels[x + y * this.width]\n  }\n\n  draw(pixels) {\n    let copy = this.pixels.slice()\n    for (let { x, y, color } of pixels) {\n      copy[x + y * this.width] = color\n    }\n    return new Picture(this.width, this.height, copy)\n  }\n}\n","import { Picture } from './picture'\n\n/**\n * A less verbose DOM builder\n */\nexport function elt(type, props, ...children) {\n  let dom = document.createElement(type)\n  if (props) {\n    Object.assign(dom, props)\n  }\n  for (let child of children) {\n    if (typeof child !== 'string') {\n      dom.appendChild(child)\n    } else {\n      dom.appendChild(document.createTextNode(child))\n    }\n  }\n  return dom\n}\n\n/**\n * Draws picture into the canvas\n */\nexport function drawPicture(picture, canvas, scale) {\n  canvas.width = picture.width * scale\n  canvas.height = picture.height * scale\n  let ctx = canvas.getContext('2d')\n\n  for (let y = 0; y < picture.height; y++) {\n    for (let x = 0; x < picture.width; x++) {\n      ctx.fillStyle = picture.pixel(x, y)\n      ctx.fillRect(x * scale, y * scale, scale, scale)\n    }\n  }\n}\n\n/**\n * A hex helper function facilitate conversion of from 8 bit\n * numerical presentation of color to base-16.\n */\nexport function hex(n) {\n  return n.toString(16).padStart(2, '0')\n}\n\n/**\n * Cache data to local storage\n */\nexport function cached(data) {\n  localStorage.setItem('_state', JSON.stringify(data))\n  return data\n}\n\n/**\n * Get cached state from local storage\n */\nexport function getCachedState() {\n  let state = JSON.parse(localStorage.getItem('_state'))\n  if (!state) return\n  // for users running older version without cached scale\n  if (!state.scale) {\n    state.scale = 20\n  }\n  state.done = state.done.map(\n    ({ width, height, pixels }) => new Picture(width, height, pixels)\n  )\n  state.redone = state.redone.map(\n    ({ width, height, pixels }) => new Picture(width, height, pixels)\n  )\n  state.picture = new Picture(\n    state.picture.width,\n    state.picture.height,\n    state.picture.pixels\n  )\n  return state\n}\n","import { drawPicture, elt } from '../utils'\n\nexport class PictureCanvas {\n  constructor(picture, scale, onPointerDown) {\n    this.dom = elt('canvas', {\n      onmousedown: (event) => this._mouse(event, onPointerDown),\n      ontouchstart: (event) => this._touch(event, onPointerDown),\n    })\n    this.scale = scale\n    this.syncState(picture)\n  }\n\n  syncState(picture) {\n    if (this.picture == picture) return\n    this.picture = picture\n    drawPicture(this.picture, this.dom, this.scale)\n  }\n\n  _mouse(mouseDownEvent, onDown) {\n    // return if not a left click\n    if (mouseDownEvent.button != 0) return\n    const pos = this._pointerPosition(mouseDownEvent)\n    const onMove = onDown(pos)\n    if (!onMove) return\n\n    let move = (moveEvent) => {\n      if (moveEvent.buttons == 0) {\n        this.dom.removeEventListener('mousemove', move)\n      } else {\n        let newPos = this._pointerPosition(moveEvent)\n        if (newPos.x == pos.x && newPos.y == pos.y) return\n        onMove(newPos)\n      }\n    }\n\n    this.dom.addEventListener('mousemove', move)\n  }\n\n  _touch(touchStartEvent, onDown) {\n    let pos = this._pointerPosition(touchStartEvent.touches[0])\n    const onMove = onDown(pos)\n    touchStartEvent.preventDefault()\n    if (!onMove) return\n\n    let move = (moveEvent) => {\n      const newPos = this._pointerPosition(moveEvent.touches[0])\n      if (newPos.x == pos.x && newPos.y == pos.y) return\n      pos = newPos\n      onMove(newPos)\n    }\n\n    let end = () => {\n      this.dom.removeEventListener('touchmove', move)\n      this.dom.removeEventListener('touchend', move)\n    }\n\n    this.dom.addEventListener('touchmove', move)\n    this.dom.addEventListener('touchend', end)\n  }\n\n  _pointerPosition(pos) {\n    const rect = this.dom.getBoundingClientRect()\n    return {\n      x: Math.floor((pos.clientX - rect.left) / this.scale),\n      y: Math.floor((pos.clientY - rect.top) / this.scale),\n    }\n  }\n}\n","import { PictureCanvas } from './components/picture-canvas'\nimport { elt } from './utils'\n\nexport class PixelEditor {\n  constructor(state, config) {\n    const { tools, controls, dispatch } = config\n    this.state = state\n    this.canvas = new PictureCanvas(state.picture, state.scale, (pos) => {\n      const selectedTool = tools[this.state.tool]\n      // call the selected tool util in ./src/tools.js\n      const drawFunction = selectedTool(pos, this.state, dispatch)\n      if (!drawFunction) return\n      return (pos) => drawFunction(pos, this.state)\n    })\n    this.controls = controls.map((Control) => new Control(state, config))\n    this.dom = elt(\n      'div',\n      {\n        style: `\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          flex-direction: column;\n        `,\n      },\n      this.canvas.dom,\n      elt(\n        'div',\n        {},\n        ...this.controls.reduce((a, c) => a.concat(' ', c.dom), [])\n      )\n    )\n    const onKeyDown = (e) => {\n      e.preventDefault()\n      dispatch({\n        undo: (e.metaKey || e.ctrlKey) && e.code === 'KeyZ',\n        redo: (e.metaKey || e.ctrlKey) && e.code === 'KeyY',\n        save: (e.metaKey || e.ctrlKey) && e.code === 'KeyS',\n      })\n    }\n    document.addEventListener('keydown', onKeyDown)\n    window.addEventListener('onbeforeunload', (e) => {\n      e.preventDefault()\n      document.removeEventListener('keydown', onKeyDown)\n    })\n  }\n\n  syncState(state) {\n    this.state = state\n    this.canvas.syncState(state.picture)\n    for (let ctrl of this.controls) {\n      ctrl.syncState(state)\n    }\n  }\n}\n","/**\n * The draw tool\n */\nexport function draw(pos, state, dispatch) {\n  function drawPixel({ x, y }, state) {\n    let drawn = { x, y, color: state.color }\n    dispatch({ picture: state.picture.draw([drawn]) })\n  }\n  // immediate call to drawPixel and a return call of the same function\n  drawPixel(pos, state)\n  return drawPixel\n}\n\n/**\n * To draw larger shapes, it can be useful to quickly create rectangles.\n */\nexport function rectangle(start, state, dispatch) {\n  function drawRectangle(pos) {\n    let xStart = Math.min(start.x, pos.x)\n    let yStart = Math.min(start.y, pos.y)\n    let xEnd = Math.max(start.x, pos.x)\n    let yEnd = Math.max(start.y, pos.y)\n    let drawn = []\n    for (let y = yStart; y <= yEnd; y++) {\n      for (let x = xStart; x <= xEnd; x++) {\n        drawn.push({ x, y, color: state.color })\n      }\n    }\n    dispatch({ picture: state.picture.draw(drawn) })\n  }\n  drawRectangle(start)\n  return drawRectangle\n}\n\n/**\n * To quickly draw circles\n * assisted by chatGPT\n */\nexport function circle(start, state, dispatch) {\n  function drawCircle(pos) {\n    const radius = Math.sqrt(\n      // eslint-disable-next-line no-restricted-properties\n      Math.pow(pos.x - start.x, 2) + Math.pow(pos.y - start.y, 2)\n    )\n    const centerX = start.x + radius\n    const centerY = start.y + radius\n    let drawn = []\n    for (let y = centerY - radius; y <= centerY + radius; y++) {\n      for (let x = centerX - radius; x <= centerX + radius; x++) {\n        const distance = Math.sqrt(\n          // eslint-disable-next-line no-restricted-properties\n          Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2)\n        )\n        if (distance <= radius) {\n          drawn.push({ x, y, color: state.color })\n        }\n      }\n    }\n    dispatch({ picture: state.picture.draw(drawn) })\n  }\n  drawCircle(start)\n  return drawCircle\n}\n\n/**\n * This function uses the Bresenham's line algorithm to draw a triangle\n * on the canvas\n * assisted by chatGPT\n */\nexport function triangle(start, state, dispatch) {\n  function drawTriangle(pos) {\n    const x1 = start.x\n    const y1 = start.y\n    const x2 = pos.x\n    const y2 = pos.y\n    const deltaX = Math.abs(x2 - x1)\n    const deltaY = Math.abs(y2 - y1)\n    const signX = x1 < x2 ? 1 : -1\n    const signY = y1 < y2 ? 1 : -1\n    let x = x1\n    let y = y1\n    let error = deltaX - deltaY\n    let drawn = []\n\n    while (x !== x2 || y !== y2) {\n      drawn.push({ x, y, color: state.color })\n      const error2 = 2 * error\n      if (error2 > -deltaY) {\n        error -= deltaY\n        x += signX\n      }\n      if (error2 < deltaX) {\n        error += deltaX\n        y += signY\n      }\n    }\n    drawn.push({ x: x2, y: y2, color: state.color })\n\n    dispatch({ picture: state.picture.draw(drawn) })\n  }\n\n  drawTriangle(start)\n  return drawTriangle\n}\n\nconst around = [\n  { dx: -1, dy: 0 },\n  { dx: 1, dy: 0 },\n  { dx: 0, dy: -1 },\n  { dx: 0, dy: 1 },\n]\n\n/**\n * Flood fill tool.\n */\nexport function fill({ x, y }, state, dispatch) {\n  let targetColor = state.picture.pixel(x, y)\n  let drawn = [{ x, y, color: state.color }]\n  for (let done = 0; done < drawn.length; done++) {\n    for (let { dx, dy } of around) {\n      // eslint-disable-next-line one-var\n      let x = drawn[done].x + dx,\n        y = drawn[done].y + dy\n      if (\n        x >= 0 &&\n        x < state.picture.width &&\n        y >= 0 &&\n        y < state.picture.height &&\n        state.picture.pixel(x, y) == targetColor &&\n        !drawn.some((p) => p.x == x && p.y == y)\n      ) {\n        drawn.push({ x, y, color: state.color })\n      }\n    }\n  }\n  dispatch({ picture: state.picture.draw(drawn) })\n}\n\n/**\n * Color picker tool\n */\nexport function pick(pos, state, dispatch) {\n  dispatch({ color: state.picture.pixel(pos.x, pos.y) })\n}\n","import { elt, hex } from '../utils'\nimport { Picture } from '../picture'\n\nexport class LoadButton {\n  constructor(_, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => startLoad(dispatch),\n      },\n      '📁 Load'\n    )\n  }\n\n  syncState() {\n    // unimplemented\n  }\n}\n\n/**\n * Gets the file from the user's computer through use of an `<input>` HTML element with the `file` attribute\n * @param {*} dispatch\n */\nfunction startLoad(dispatch) {\n  let input = elt('input', {\n    type: 'file',\n    onchange: () => finishLoad(input.files[0], dispatch),\n  })\n  document.body.appendChild(input)\n  input.click()\n  input.remove()\n}\n\n/**\n * When the user has selected a file, we use the `FileReader` to\n * get access to its contents, again as a data URL.\n * This URL can be used to create a `<img>` element; since we can't\n * get direct access to the pixels in such an image, we can't create\n * a `Picture` object from that. A call to `pictureFromImage` handles this conversion.\n * @param {*} file\n * @param {*} dispatch\n */\nfunction finishLoad(file, dispatch) {\n  if (file == null) return\n  let reader = new FileReader()\n  reader.addEventListener('load', () => {\n    let image = elt('img', {\n      onload: () =>\n        dispatch({\n          picture: pictureFromImage(image),\n        }),\n      src: reader.result,\n    })\n  })\n  reader.readAsDataURL(file)\n}\n\nfunction pictureFromImage(image) {\n  let width = Math.min(100, image.width)\n  let height = Math.min(100, image.height)\n  let canvas = elt('canvas', { width, height })\n  let ctx = canvas.getContext('2d')\n  ctx.drawImage(image, 0, 0)\n  let pixels = []\n  // this data property is an array of color components\n  // contains 4 values which represent reg, green, blue and alpha (for transparency) of the pixel's color as 8 bit numbers (0-255)\n  let { data } = ctx.getImageData(0, 0, width, height)\n\n  for (let i = 0; i < data.length; i += 4) {\n    let [r, g, b] = data.slice(i, i + 3)\n    pixels.push(`#${hex(r)}${hex(g)}${hex(b)}`)\n  }\n  return new Picture(width, height, pixels)\n}\n","import { drawPicture, elt } from '../utils'\n\nexport class SaveButton {\n  constructor(state, { dispatch }) {\n    this.picture = state.picture\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => dispatch({ save: true }),\n      },\n      '💾 Save'\n    )\n  }\n\n  static save(picture, scale) {\n    const canvas = elt('canvas')\n    drawPicture(picture, canvas, scale)\n    const link = elt('a', {\n      href: canvas.toDataURL(),\n      download: `${prompt('save file as?', 'pixel-art') ?? 'pixel-art'}.png`,\n    })\n    document.body.appendChild(link)\n    link.click()\n    link.remove()\n  }\n\n  syncState(state) {\n    this.picture = state.picture\n  }\n}\n","import { elt } from '../utils'\n\nexport class UndoButton {\n  constructor(state, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => dispatch({ undo: true }),\n        disabled: state.done.length <= 1,\n      },\n      '⤴ Undo'\n    )\n  }\n\n  syncState(state) {\n    this.dom.disabled = state.done.length <= 1\n  }\n}\n","import { elt } from '../utils'\n\nexport class RedoButton {\n  constructor(state, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => dispatch({ redo: true }),\n        disabled: state.redone.length < 1,\n      },\n      '⤵ Redo'\n    )\n  }\n\n  syncState(state) {\n    this.dom.disabled = state.redone.length < 1\n  }\n}\n","import { elt } from '../utils'\n\nexport class ResetButton {\n  constructor(state, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => {\n          // eslint-disable-next-line no-restricted-globals, no-alert\n          if (confirm('Are you sure you want to reset the canvas?')) {\n            dispatch({ reset: true })\n          }\n        },\n        disabled: !state.done.length,\n      },\n      '🔁 Reset'\n    )\n  }\n\n  syncState(state) {\n    this.dom.disabled = !state.done.length\n  }\n}\n","import { elt } from '../utils'\n\nexport class ToolSelect {\n  constructor(state, { tools, dispatch }) {\n    this.select = elt(\n      'select',\n      {\n        onchange: () => dispatch({ tool: this.select.value }),\n      },\n      ...Object.keys(tools).map((name) =>\n        elt(\n          'option',\n          {\n            selected: name == state.tool,\n          },\n          name\n        )\n      )\n    )\n    this.dom = elt('label', null, 'Tool: ', this.select)\n  }\n\n  syncState(state) {\n    this.select.value = state.tool\n  }\n}\n","import { elt } from '../utils'\n\nexport class ColorSelect {\n  constructor(state, { dispatch }) {\n    this.input = elt('input', {\n      type: 'color',\n      value: state.color,\n      onchange: () => dispatch({ color: this.input.value }),\n    })\n    this.dom = elt('label', null, '🎨 Color: ', this.input)\n  }\n\n  /**\n   * Sync the ColorSelect state\n   * @param {*} state\n   */\n  syncState(state) {\n    this.input.value = state.color\n  }\n}\n","import { elt } from '../utils'\n\nexport class SetScale {\n  constructor(state, { scaleOptions, dispatch }) {\n    this.select = elt(\n      'select',\n      {\n        onchange: () => {\n          dispatch({ scale: Number(this.select.value) })\n          window.location.reload()\n        },\n      },\n      ...scaleOptions.map((value) =>\n        elt('option', { selected: value == state?.scale }, value)\n      )\n    )\n    this.dom = elt('label', null, 'Scale: ', this.select)\n  }\n\n  syncState(state) {\n    this.select.value = state.scale\n  }\n}\n","import { LoadButton } from './load-button'\nimport { PictureCanvas } from './picture-canvas'\nimport { SaveButton } from './save-button'\nimport { UndoButton } from './undo-button'\nimport { RedoButton } from './redo-button'\nimport { ResetButton } from './reset-button'\nimport { ToolSelect } from './tool-select'\nimport { ColorSelect } from './color-select'\nimport { SetScale } from './set-scale'\n\nexport {\n  LoadButton,\n  PictureCanvas,\n  SaveButton,\n  UndoButton,\n  RedoButton,\n  ResetButton,\n  ToolSelect,\n  ColorSelect,\n  SetScale,\n}\n","import { PixelEditor } from './app'\nimport { draw, fill, pick, rectangle, circle, triangle } from './tools'\nimport {\n  LoadButton,\n  SaveButton,\n  UndoButton,\n  RedoButton,\n  ResetButton,\n  ToolSelect,\n  ColorSelect,\n  SetScale,\n} from './components'\nimport { Picture } from './picture'\nimport { cached, getCachedState } from './utils'\n\nfunction startPixelEditor({\n  state = getCachedState() ?? DEFAULT_STATE,\n  tools = baseTools,\n  controls = baseControls,\n  scaleOptions = ['10', '15', '20', '25', '30'],\n}) {\n  const app = new PixelEditor(state, {\n    tools,\n    controls,\n    scaleOptions,\n    dispatch(action) {\n      state = historyUpdateState(state, action)\n      app.syncState(state)\n    },\n  })\n  return app.dom\n}\n\nconst DEFAULT_STATE = {\n  tool: 'draw',\n  scale: 20,\n  color: '#000000',\n  picture: Picture.empty(60, 30, '#f0f0f0'),\n  done: [],\n  redone: [],\n  doneAt: 0,\n}\n\nconst baseTools = {\n  draw,\n  fill,\n  pick,\n  rectangle,\n  circle,\n  triangle,\n}\n\nconst baseControls = [\n  ToolSelect,\n  SetScale,\n  ColorSelect,\n  SaveButton,\n  LoadButton,\n  UndoButton,\n  RedoButton,\n  ResetButton,\n]\n\n// quasi - reducer function\nfunction historyUpdateState(state, action) {\n  if (action.undo) {\n    if (state.done.length <= 1) return state\n    let redone = state.done.pop()\n    return cached({\n      ...state,\n      picture: state.done[state.done.length - 1],\n      done: [...state.done],\n      redone: [...state.redone, redone],\n      doneAt: 0,\n    })\n  }\n\n  if (action.redo) {\n    if (state.redone.length < 1) return state\n    let picture = state.redone.pop()\n    return cached({\n      ...state,\n      picture,\n      done: [...state.done, picture],\n      redone: [...state.redone],\n      doneAt: 0,\n    })\n  }\n\n  if (action.reset) {\n    let picture = Picture.empty(60, 30, '#f0f0f0')\n    return cached({\n      ...state,\n      picture,\n      done: [],\n      redone: [],\n    })\n  }\n\n  if (action.save) {\n    SaveButton.save(state.picture, state.scale)\n    return cached({ ...state })\n  }\n\n  if (action.picture && state.doneAt < Date.now() - 1000) {\n    return cached({\n      ...state,\n      ...action,\n      done: [...state.done, state.picture],\n      // redone state only relevant on undo, otherwise it remains empty\n      // on regular picture action\n      redone: [],\n      doneAt: Date.now(),\n    })\n  }\n  return cached({ ...state, ...action })\n}\n\nconsole.info('Fork me on github: https://github.com/collinsmuriuki/pixie')\ndocument.getElementById('root').appendChild(startPixelEditor({}))\n"]}