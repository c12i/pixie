{"version":3,"sources":["picture.js","utils.js","components/picture-canvas.js","app.js","tools.js","components/load-button.js","components/save-button.js","components/undo-button.js","components/redo-button.js","components/reset-button.js","components/tool-select.js","components/color-select.js","components/index.js","index.js"],"names":["Picture","exports","width","height","pixels","_classCallCheck","_createClass","key","value","x","y","_step","copy","slice","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","color","err","e","f","Array","fill","_picture","require","elt","type","props","dom","document","createElement","Object","assign","_len","arguments","length","children","_key","_i","_children","child","appendChild","createTextNode","drawPicture","picture","canvas","scale","ctx","getContext","fillStyle","pixel","fillRect","hex","toString","padStart","cached","data","localStorage","setItem","JSON","stringify","getCachedState","state","parse","getItem","map","_ref","redone","_ref2","_utils","_typeof","o","Symbol","iterator","constructor","prototype","instance","Constructor","TypeError","_defineProperties","target","i","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","SCALE","PictureCanvas","pointerDown","_this","onmousedown","event","mouse","ontouchstart","touch","syncState","downEvent","onDown","_this2","button","pos","pointerPosition","onMove","addEventListener","move","moveEvent","buttons","removeEventListener","newPos","startEvent","_this3","touches","preventDefault","domNode","rect","getBoundingClientRect","Math","floor","clientX","left","clientY","top","_pictureCanvas","allowArrayLike","it","isArray","_unsupportedIterableToArray","F","_e","normalCompletion","didErr","step","next","_e2","return","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","minLen","_arrayLikeToArray","name","from","test","iter","len","arr2","PixelEditor","config","tools","controls","dispatch","drawFunction","selectedTool","tool","Control","apply","concat","reduce","a","c","onKeyDown","undo","metaKey","ctrlKey","code","redo","save","window","draw","drawPixel","drawn","rectangle","start","drawRectangle","xStart","min","yStart","xEnd","max","yEnd","push","circle","drawCircle","radius","sqrt","pow","centerX","centerY","triangle","drawTriangle","x1","y1","x2","y2","deltaX","abs","deltaY","signX","signY","error","error2","around","dx","dy","targetColor","_loop","some","p","pick","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","r","l","t","u","LoadButton","_","onclick","startLoad","onchange","finishLoad","files","body","click","remove","file","reader","FileReader","image","onload","pictureFromImage","src","result","readAsDataURL","drawImage","getImageData","_data$slice2","g","b","SaveButton","_prompt","link","href","toDataURL","download","prompt","UndoButton","disabled","RedoButton","ResetButton","confirm","reset","ToolSelect","select","keys","selected","ColorSelect","_loadButton","_saveButton","_undoButton","_redoButton","_resetButton","_toolSelect","_colorSelect","_app","_tools","_components","_picture2","ownKeys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","INITIAL_STATE","empty","doneAt","baseTools","baseControls","historyUpdateState","action","pop","Date","now","startPixelEditor","_getCachedState","_ref$state","_ref$tools","_ref$controls","app","console","info","getElementById"],"mappings":"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","file":"src.49d7715e.js","sourceRoot":"../src","sourcesContent":["/**\n * This class represents the picture in the canvas\n */\nexport class Picture {\n  constructor(width, height, pixels) {\n    this.width = width\n    this.height = height\n    this.pixels = pixels\n  }\n\n  static empty(width, height, color) {\n    let pixels = new Array(width * height).fill(color)\n    return new Picture(width, height, pixels)\n  }\n\n  pixel(x, y) {\n    return this.pixels[x + y * this.width]\n  }\n\n  draw(pixels) {\n    let copy = this.pixels.slice()\n    for (let { x, y, color } of pixels) {\n      copy[x + y * this.width] = color\n    }\n    return new Picture(this.width, this.height, copy)\n  }\n}\n","import { Picture } from './picture'\n\n/**\n * A less verbose DOM builder\n */\nexport function elt(type, props, ...children) {\n  let dom = document.createElement(type)\n  if (props) {\n    Object.assign(dom, props)\n  }\n  for (let child of children) {\n    if (typeof child !== 'string') {\n      dom.appendChild(child)\n    } else {\n      dom.appendChild(document.createTextNode(child))\n    }\n  }\n  return dom\n}\n\n/**\n * Draws picture into the canvas\n */\nexport function drawPicture(picture, canvas, scale) {\n  canvas.width = picture.width * scale\n  canvas.height = picture.height * scale\n  let ctx = canvas.getContext('2d')\n\n  for (let y = 0; y < picture.height; y++) {\n    for (let x = 0; x < picture.width; x++) {\n      ctx.fillStyle = picture.pixel(x, y)\n      ctx.fillRect(x * scale, y * scale, scale, scale)\n    }\n  }\n}\n\n/**\n * A hex helper function facilitate conversion of from 8 bit\n * numerical presentation of color to base-16.\n */\nexport function hex(n) {\n  return n.toString(16).padStart(2, '0')\n}\n\n/**\n * Cache data to local storage\n */\nexport function cached(data) {\n  localStorage.setItem('_state', JSON.stringify(data))\n  return data\n}\n\n/**\n * Get cached state from local storage\n */\nexport function getCachedState() {\n  let state = JSON.parse(localStorage.getItem('_state'))\n  if (!state) return\n  state.done = state.done.map(\n    ({ width, height, pixels }) => new Picture(width, height, pixels)\n  )\n  state.redone = state.redone.map(\n    ({ width, height, pixels }) => new Picture(width, height, pixels)\n  )\n  state.picture = new Picture(\n    state.picture.width,\n    state.picture.height,\n    state.picture.pixels\n  )\n  return state\n}\n","import { drawPicture, elt } from '../utils'\n\nexport const SCALE = 15\n\nexport class PictureCanvas {\n  constructor(picture, pointerDown) {\n    this.dom = elt('canvas', {\n      onmousedown: (event) => this.mouse(event, pointerDown),\n      ontouchstart: (event) => this.touch(event, pointerDown),\n    })\n    this.syncState(picture)\n  }\n\n  syncState(picture) {\n    if (this.picture == picture) return\n    this.picture = picture\n    drawPicture(this.picture, this.dom, SCALE)\n  }\n\n  mouse(downEvent, onDown) {\n    // return if not a left click\n    if (downEvent.button != 0) return\n    let pos = pointerPosition(downEvent, this.dom)\n    let onMove = onDown(pos)\n    if (!onMove) return\n\n    let move = (moveEvent) => {\n      if (moveEvent.buttons == 0) {\n        this.dom.removeEventListener('mousemove', move)\n      } else {\n        let newPos = pointerPosition(moveEvent, this.dom)\n        if (newPos.x == pos.x && newPos.y == pos.y) return\n        onMove(newPos)\n      }\n    }\n    this.dom.addEventListener('mousemove', move)\n  }\n\n  touch(startEvent, onDown) {\n    let pos = pointerPosition(startEvent.touches[0], this.dom)\n    let onMove = onDown(pos)\n    startEvent.preventDefault()\n    if (!onMove) return\n\n    let move = (moveEvent) => {\n      let newPos = pointerPosition(moveEvent.touches[0], this.dom)\n      if (newPos.x == pos.x && newPos.y == pos.y) return\n      pos = newPos\n      onMove(newPos)\n    }\n    let end = () => {\n      this.dom.removeEventListener('touchmove', move)\n      this.dom.removeEventListener('touchend', move)\n    }\n    this.dom.addEventListener('touchmove', move)\n    this.dom.addEventListener('touchend', end)\n  }\n}\n\nfunction pointerPosition(pos, domNode) {\n  let rect = domNode.getBoundingClientRect()\n  return {\n    x: Math.floor((pos.clientX - rect.left) / SCALE),\n    y: Math.floor((pos.clientY - rect.top) / SCALE),\n  }\n}\n","import { PictureCanvas } from './components/picture-canvas'\nimport { elt } from './utils'\n\nexport class PixelEditor {\n  constructor(state, config) {\n    let { tools, controls, dispatch } = config\n    this.state = state\n    this.canvas = new PictureCanvas(state.picture, (pos) => {\n      let selectedTool = tools[this.state.tool]\n      // call the selected tool util in ./src/tools.js\n      let drawFunction = selectedTool(pos, this.state, dispatch)\n      if (drawFunction) {\n        // call the function returned by the selected tool\n        return (pos) => drawFunction(pos, this.state)\n      }\n    })\n    this.controls = controls.map((Control) => new Control(state, config))\n    this.dom = elt(\n      'div',\n      {},\n      this.canvas.dom,\n      elt('br'),\n      ...this.controls.reduce((a, c) => a.concat(' ', c.dom), [])\n    )\n    const onKeyDown = (e) => {\n      e.preventDefault()\n      dispatch({\n        undo: (e.metaKey || e.ctrlKey) && e.code === 'KeyZ',\n        redo: (e.metaKey || e.ctrlKey) && e.code === 'KeyY',\n        save: (e.metaKey || e.ctrlKey) && e.code === 'KeyS',\n      })\n    }\n    document.addEventListener('keydown', onKeyDown)\n    window.addEventListener('onbeforeunload', (e) => {\n      e.preventDefault()\n      document.removeEventListener('keydown', onKeyDown)\n    })\n  }\n\n  syncState(state) {\n    this.state = state\n    this.canvas.syncState(state.picture)\n    for (let ctrl of this.controls) {\n      ctrl.syncState(state)\n    }\n  }\n}\n","/**\n * The draw tool\n */\nexport function draw(pos, state, dispatch) {\n  function drawPixel({ x, y }, state) {\n    let drawn = { x, y, color: state.color }\n    dispatch({ picture: state.picture.draw([drawn]) })\n  }\n  // immediate call to drawPixel and a return call of the same function\n  drawPixel(pos, state)\n  return drawPixel\n}\n\n/**\n * To draw larger shapes, it can be useful to quickly create rectangles.\n */\nexport function rectangle(start, state, dispatch) {\n  function drawRectangle(pos) {\n    let xStart = Math.min(start.x, pos.x)\n    let yStart = Math.min(start.y, pos.y)\n    let xEnd = Math.max(start.x, pos.x)\n    let yEnd = Math.max(start.y, pos.y)\n    let drawn = []\n    for (let y = yStart; y <= yEnd; y++) {\n      for (let x = xStart; x <= xEnd; x++) {\n        drawn.push({ x, y, color: state.color })\n      }\n    }\n    dispatch({ picture: state.picture.draw(drawn) })\n  }\n  drawRectangle(start)\n  return drawRectangle\n}\n\n/**\n * To quickly draw circles\n * assisted by chatGPT\n */\nexport function circle(start, state, dispatch) {\n  function drawCircle(pos) {\n    const radius = Math.sqrt(\n      // eslint-disable-next-line no-restricted-properties\n      Math.pow(pos.x - start.x, 2) + Math.pow(pos.y - start.y, 2)\n    )\n    const centerX = start.x + radius\n    const centerY = start.y + radius\n    let drawn = []\n    for (let y = centerY - radius; y <= centerY + radius; y++) {\n      for (let x = centerX - radius; x <= centerX + radius; x++) {\n        const distance = Math.sqrt(\n          // eslint-disable-next-line no-restricted-properties\n          Math.pow(x - centerX, 2) + Math.pow(y - centerY, 2)\n        )\n        if (distance <= radius) {\n          drawn.push({ x, y, color: state.color })\n        }\n      }\n    }\n    dispatch({ picture: state.picture.draw(drawn) })\n  }\n  drawCircle(start)\n  return drawCircle\n}\n\n/**\n * This function uses the Bresenham's line algorithm to draw a triangle\n * on the canvas\n * assisted by chatGPT\n */\nexport function triangle(start, state, dispatch) {\n  function drawTriangle(pos) {\n    const x1 = start.x\n    const y1 = start.y\n    const x2 = pos.x\n    const y2 = pos.y\n    const deltaX = Math.abs(x2 - x1)\n    const deltaY = Math.abs(y2 - y1)\n    const signX = x1 < x2 ? 1 : -1\n    const signY = y1 < y2 ? 1 : -1\n    let x = x1\n    let y = y1\n    let error = deltaX - deltaY\n    let drawn = []\n\n    while (x !== x2 || y !== y2) {\n      drawn.push({ x, y, color: state.color })\n      const error2 = 2 * error\n      if (error2 > -deltaY) {\n        error -= deltaY\n        x += signX\n      }\n      if (error2 < deltaX) {\n        error += deltaX\n        y += signY\n      }\n    }\n    drawn.push({ x: x2, y: y2, color: state.color })\n\n    dispatch({ picture: state.picture.draw(drawn) })\n  }\n\n  drawTriangle(start)\n  return drawTriangle\n}\n\nconst around = [\n  { dx: -1, dy: 0 },\n  { dx: 1, dy: 0 },\n  { dx: 0, dy: -1 },\n  { dx: 0, dy: 1 },\n]\n\n/**\n * Flood fill tool.\n */\nexport function fill({ x, y }, state, dispatch) {\n  let targetColor = state.picture.pixel(x, y)\n  let drawn = [{ x, y, color: state.color }]\n  for (let done = 0; done < drawn.length; done++) {\n    for (let { dx, dy } of around) {\n      // eslint-disable-next-line one-var\n      let x = drawn[done].x + dx,\n        y = drawn[done].y + dy\n      if (\n        x >= 0 &&\n        x < state.picture.width &&\n        y >= 0 &&\n        y < state.picture.height &&\n        state.picture.pixel(x, y) == targetColor &&\n        !drawn.some((p) => p.x == x && p.y == y)\n      ) {\n        drawn.push({ x, y, color: state.color })\n      }\n    }\n  }\n  dispatch({ picture: state.picture.draw(drawn) })\n}\n\n/**\n * Color picker tool\n */\nexport function pick(pos, state, dispatch) {\n  dispatch({ color: state.picture.pixel(pos.x, pos.y) })\n}\n","import { elt, hex } from '../utils'\nimport { Picture } from '../picture'\n\nexport class LoadButton {\n  constructor(_, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => startLoad(dispatch),\n      },\n      '📁 Load'\n    )\n  }\n\n  syncState() {\n    // unimplemented\n  }\n}\n\n/**\n * Gets the file from the user's computer through use of an `<input>` HTML element with the `file` attribute\n * @param {*} dispatch\n */\nfunction startLoad(dispatch) {\n  let input = elt('input', {\n    type: 'file',\n    onchange: () => finishLoad(input.files[0], dispatch),\n  })\n  document.body.appendChild(input)\n  input.click()\n  input.remove()\n}\n\n/**\n * When the user has selected a file, we use the `FileReader` to\n * get access to its contents, again as a data URL.\n * This URL can be used to create a `<img>` element; since we can't\n * get direct access to the pixels in such an image, we can't create\n * a `Picture` object from that. A call to `pictureFromImage` handles this conversion.\n * @param {*} file\n * @param {*} dispatch\n */\nfunction finishLoad(file, dispatch) {\n  if (file == null) return\n  let reader = new FileReader()\n  reader.addEventListener('load', () => {\n    let image = elt('img', {\n      onload: () =>\n        dispatch({\n          picture: pictureFromImage(image),\n        }),\n      src: reader.result,\n    })\n  })\n  reader.readAsDataURL(file)\n}\n\nfunction pictureFromImage(image) {\n  let width = Math.min(100, image.width)\n  let height = Math.min(100, image.height)\n  let canvas = elt('canvas', { width, height })\n  let ctx = canvas.getContext('2d')\n  ctx.drawImage(image, 0, 0)\n  let pixels = []\n  // this data property is an array of color components\n  // contains 4 values which represent reg, green, blue and alpha (for transparency) of the pixel's color as 8 bit numbers (0-255)\n  let { data } = ctx.getImageData(0, 0, width, height)\n\n  for (let i = 0; i < data.length; i += 4) {\n    let [r, g, b] = data.slice(i, i + 3)\n    pixels.push(`#${hex(r)}${hex(g)}${hex(b)}`)\n  }\n  return new Picture(width, height, pixels)\n}\n","import { drawPicture, elt } from '../utils'\nimport { SCALE } from './picture-canvas'\n\nexport class SaveButton {\n  constructor(state, { dispatch }) {\n    this.picture = state.picture\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => dispatch({ save: true }),\n      },\n      '💾 Save'\n    )\n  }\n\n  static save(picture) {\n    let canvas = elt('canvas')\n    drawPicture(picture, canvas, SCALE)\n    let link = elt('a', {\n      href: canvas.toDataURL(),\n      // eslint-disable-next-line no-alert\n      download: `${prompt('save file as?', 'pixel-art') ?? 'pixel-art'}.png`,\n    })\n    document.body.appendChild(link)\n    link.click()\n    link.remove()\n  }\n\n  syncState(state) {\n    this.picture = state.picture\n  }\n}\n","import { elt } from '../utils'\n\nexport class UndoButton {\n  constructor(state, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => dispatch({ undo: true }),\n        disabled: state.done.length < 1,\n      },\n      '⤴ Undo'\n    )\n  }\n\n  syncState(state) {\n    this.dom.disabled = state.done.length <= 1\n  }\n}\n","import { elt } from '../utils'\n\nexport class RedoButton {\n  constructor(state, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => dispatch({ redo: true }),\n        disabled: state.redone.length < 1,\n      },\n      '⤵ Redo'\n    )\n  }\n\n  syncState(state) {\n    this.dom.disabled = state.redone.length < 1\n  }\n}\n","import { elt } from '../utils'\n\nexport class ResetButton {\n  constructor(state, { dispatch }) {\n    this.dom = elt(\n      'button',\n      {\n        onclick: () => {\n          // eslint-disable-next-line no-restricted-globals, no-alert\n          if (confirm('Are you sure you want to reset the canvas?')) {\n            dispatch({ reset: true })\n          }\n        },\n        disabled: !state.done.length,\n      },\n      '🔁 Reset'\n    )\n  }\n\n  syncState(state) {\n    this.dom.disabled = !state.done.length\n  }\n}\n","import { elt } from '../utils'\n\nexport class ToolSelect {\n  constructor(state, { tools, dispatch }) {\n    this.select = elt(\n      'select',\n      {\n        onchange: () => dispatch({ tool: this.select.value }),\n      },\n      ...Object.keys(tools).map((name) =>\n        elt(\n          'option',\n          {\n            selected: name == state.tool,\n          },\n          name\n        )\n      )\n    )\n    this.dom = elt('label', null, 'Tool: ', this.select)\n  }\n\n  /**\n   * Sync ToolSelect state\n   * @param {*} state\n   */\n  syncState(state) {\n    this.select.value = state.tool\n  }\n}\n","import { elt } from '../utils'\n\nexport class ColorSelect {\n  constructor(state, { dispatch }) {\n    this.input = elt('input', {\n      type: 'color',\n      value: state.color,\n      onchange: () => dispatch({ color: this.input.value }),\n    })\n    this.dom = elt('label', null, '🎨 Color: ', this.input)\n  }\n\n  /**\n   * Sync the ColorSelect state\n   * @param {*} state\n   */\n  syncState(state) {\n    this.input.value = state.color\n  }\n}\n","import { LoadButton } from './load-button'\nimport { PictureCanvas } from './picture-canvas'\nimport { SaveButton } from './save-button'\nimport { UndoButton } from './undo-button'\nimport { RedoButton } from './redo-button'\nimport { ResetButton } from './reset-button'\nimport { ToolSelect } from './tool-select'\nimport { ColorSelect } from './color-select'\n\nexport {\n  LoadButton,\n  PictureCanvas,\n  SaveButton,\n  UndoButton,\n  RedoButton,\n  ResetButton,\n  ToolSelect,\n  ColorSelect,\n}\n","import { PixelEditor } from './app'\nimport { draw, fill, pick, rectangle, circle, triangle } from './tools'\nimport {\n  LoadButton,\n  SaveButton,\n  UndoButton,\n  RedoButton,\n  ResetButton,\n  ToolSelect,\n  ColorSelect,\n} from './components'\nimport { Picture } from './picture'\nimport { cached, getCachedState } from './utils'\n\nconst INITIAL_STATE = {\n  tool: 'draw',\n  color: '#000000',\n  picture: Picture.empty(60, 30, '#f0f0f0'),\n  done: [],\n  redone: [],\n  doneAt: 0,\n}\n\nconst baseTools = {\n  draw,\n  fill,\n  pick,\n  rectangle,\n  circle,\n  triangle,\n}\n\nconst baseControls = [\n  ToolSelect,\n  ColorSelect,\n  SaveButton,\n  LoadButton,\n  UndoButton,\n  RedoButton,\n  ResetButton,\n]\n\n// quasi - reducer function\nfunction historyUpdateState(state, action) {\n  if (action.undo) {\n    let redone = state.done.pop()\n    return cached({\n      ...state,\n      picture: state.done[state.done.length - 1],\n      done: [...state.done],\n      redone: [...state.redone, redone],\n      doneAt: 0,\n    })\n  }\n\n  if (action.redo) {\n    let picture = state.redone.pop()\n    return cached({\n      ...state,\n      picture,\n      done: [...state.done, picture],\n      redone: [...state.redone],\n      doneAt: 0,\n    })\n  }\n\n  if (action.reset) {\n    let picture = Picture.empty(60, 30, '#f0f0f0')\n    return cached({\n      ...state,\n      picture,\n      done: [],\n      redone: [],\n    })\n  }\n\n  if (action.save) {\n    SaveButton.save(state.picture)\n    return cached({ ...state })\n  }\n\n  if (action.picture && state.doneAt < Date.now() - 1000) {\n    return cached({\n      ...state,\n      ...action,\n      done: [...state.done, state.picture],\n      // redone state only relevant on undo, otherwise it remains empty\n      // on regular picture action\n      redone: [],\n      doneAt: Date.now(),\n    })\n  }\n  return cached({ ...state, ...action })\n}\n\nfunction startPixelEditor({\n  state = getCachedState() ?? INITIAL_STATE,\n  tools = baseTools,\n  controls = baseControls,\n}) {\n  const app = new PixelEditor(state, {\n    tools,\n    controls,\n    dispatch(action) {\n      state = historyUpdateState(state, action)\n      app.syncState(state)\n    },\n  })\n  return app.dom\n}\n\nconsole.info('Fork me on github: https://github.com/collinsmuriuki/pixie')\ndocument.getElementById('root').appendChild(startPixelEditor({}))\n"]}